;
; tox - automated and standardized testing in Python
; https://tox.wiki/en/latest/user_guide.html
;

; install multiple Python environments using pyenv
; ------------------------------------------------
;
; install pyenv itself
;   curl https://pyenv.run | bash
;   ...and follow the provided instructions
; install build dependencies
;   https://github.com/pyenv/pyenv/wiki#suggested-build-environment
; install Python versions
;   pyenv install 3.9
;   pyenv install 3.10
;   pyenv install 3.11
; install tox & virtualenv-penv
;   pipx install tox
;   pipx inject tox virtualenv-pyenv
;
; optimize Python performance:
; https://github.com/pyenv/pyenv/wiki#how-to-build-cpython-for-maximum-performance

[tox]
requires =
    tox >=4
env_list =
    lint
    type
    coverage_clean
    py{310,311,312}
    coverage_report

; pytest & coverage
; https://pytest-cov.readthedocs.io/en/latest/tox.html
[coverage:run]
branch = True
omit =
  tests/test_physical_device.py

[coverage:report]
fail_under = 90

[coverage:html]
directory = tests/coverage_report/

; https://github.com/PyCQA/flake8
[flake8]
max-line-length = 250
extend-ignore   = E221,E241

[testenv:lint]
description = lint code (flake8)
deps = --global-option="$(python-config --includes)" -r requirements.txt
commands = flake8 {posargs:src tests}

[testenv:type]
description = check type hints
deps = --global-option="$(python-config --includes)" -r requirements.txt
commands =
    mypy {posargs:src tests}

; code is incompatible with Python 3.9 due to type hints
; (it could be fixed by changing the type hints but we won't)

[testenv]
description = install pytest in a virtual environment and invoke it on the tests folder
depends =
    {py310,py311,312}: coverage_clean
    coverage_report: py310,py311,312
set_env =
  VIRTUALENV_DISCOVERY = pyenv
deps = --global-option="$(python-config --includes)" -r requirements.txt
# generate a coverage report but do not mesurements and do not fail
# (we will combine all measurements into a single report later on)
commands = pytest --cov --cov-append --cov-report= --cov-fail-under=0 tests {posargs}

[testenv:coverage_clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:coverage_report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html
